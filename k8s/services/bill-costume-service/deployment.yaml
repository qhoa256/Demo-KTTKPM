apiVersion: apps/v1
kind: Deployment
metadata:
  name: bill-costume-service
  namespace: costume-rental
  labels:
    app: bill-costume-service
    version: v1
spec:
  replicas: 2
  selector:
    matchLabels:
      app: bill-costume-service
  template:
    metadata:
      labels:
        app: bill-costume-service
        version: v1
    spec:
      containers:
      - name: bill-costume-service
        image: costume-rental/bill-costume-service:latest
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 8083
          name: http
        env:
        - name: SPRING_PROFILES_ACTIVE
          valueFrom:
            configMapKeyRef:
              name: app-config
              key: spring-profiles-active
        - name: SPRING_DATASOURCE_URL
          value: "jdbc:mysql://$(MYSQL_HOST):$(MYSQL_PORT)/bill_costume_service_db?createDatabaseIfNotExist=true"
        - name: MYSQL_HOST
          valueFrom:
            configMapKeyRef:
              name: app-config
              key: mysql-host
        - name: MYSQL_PORT
          valueFrom:
            configMapKeyRef:
              name: app-config
              key: mysql-port
        - name: SPRING_DATASOURCE_USERNAME
          valueFrom:
            secretKeyRef:
              name: app-secret
              key: db-username
        - name: SPRING_DATASOURCE_PASSWORD
          valueFrom:
            secretKeyRef:
              name: app-secret
              key: db-password
        - name: USER_SERVICE_URL
          valueFrom:
            configMapKeyRef:
              name: app-config
              key: user-service-url
        - name: LOGGING_LEVEL_ROOT
          valueFrom:
            configMapKeyRef:
              name: app-config
              key: logging-level
        resources:
          requests:
            memory: "256Mi"
            cpu: "100m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /actuator/health
            port: 8083
          initialDelaySeconds: 60
          periodSeconds: 30
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /actuator/health
            port: 8083
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
      restartPolicy: Always
---
apiVersion: v1
kind: Service
metadata:
  name: bill-costume-service
  namespace: costume-rental
  labels:
    app: bill-costume-service
spec:
  selector:
    app: bill-costume-service
  ports:
  - name: http
    port: 8083
    targetPort: 8083
    protocol: TCP
  type: ClusterIP
