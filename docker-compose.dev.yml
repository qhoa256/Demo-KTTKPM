version: '3.8'

services:
  # MySQL Database for Development
  mysql-db:
    image: mysql:8.0
    container_name: costume-rental-mysql-dev
    environment:
      MYSQL_ROOT_PASSWORD: 1
      MYSQL_DATABASE: costume_rental_db
    ports:
      - "3307:3306"  # Different port for dev to avoid conflicts
    volumes:
      - mysql_dev_data:/var/lib/mysql
      - ./docker/mysql/init:/docker-entrypoint-initdb.d
    networks:
      - costume-rental-dev-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p1"]
      timeout: 20s
      retries: 10
      interval: 10s
      start_period: 40s

  # phpMyAdmin for database management
  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: costume-rental-phpmyadmin
    environment:
      PMA_HOST: mysql-db
      PMA_PORT: 3306
      PMA_USER: root
      PMA_PASSWORD: 1
    ports:
      - "8090:80"
    depends_on:
      mysql-db:
        condition: service_healthy
    networks:
      - costume-rental-dev-network

  # User Service
  user-service:
    build:
      context: .
      dockerfile: user-service/Dockerfile
    container_name: user-service-dev
    environment:
      SPRING_PROFILES_ACTIVE: docker
      SPRING_DEVTOOLS_RESTART_ENABLED: true
    ports:
      - "8081:8081"
    volumes:
      - ./user-service/src:/app/src
    depends_on:
      mysql-db:
        condition: service_healthy
    networks:
      - costume-rental-dev-network

  # Costume Service
  costume-service:
    build:
      context: .
      dockerfile: costume-service/Dockerfile
    container_name: costume-service-dev
    environment:
      SPRING_PROFILES_ACTIVE: docker
      SPRING_DEVTOOLS_RESTART_ENABLED: true
    ports:
      - "8082:8082"
    volumes:
      - ./costume-service/src:/app/src
    depends_on:
      mysql-db:
        condition: service_healthy
    networks:
      - costume-rental-dev-network

  # Bill Costume Service
  bill-costume-service:
    build:
      context: .
      dockerfile: bill-costume-service/Dockerfile
    container_name: bill-costume-service-dev
    environment:
      SPRING_PROFILES_ACTIVE: docker
      SPRING_DEVTOOLS_RESTART_ENABLED: true
    ports:
      - "8083:8083"
    volumes:
      - ./bill-costume-service/src:/app/src
    depends_on:
      mysql-db:
        condition: service_healthy
    networks:
      - costume-rental-dev-network

  # Supplier Service
  supplier-service:
    build:
      context: .
      dockerfile: supplier-service/Dockerfile
    container_name: supplier-service-dev
    environment:
      SPRING_PROFILES_ACTIVE: docker
      SPRING_DEVTOOLS_RESTART_ENABLED: true
    ports:
      - "8084:8084"
    volumes:
      - ./supplier-service/src:/app/src
    depends_on:
      mysql-db:
        condition: service_healthy
    networks:
      - costume-rental-dev-network

  # Import Bill Service
  import-bill-service:
    build:
      context: .
      dockerfile: import-bill-service/Dockerfile
    container_name: import-bill-service-dev
    environment:
      SPRING_PROFILES_ACTIVE: docker
      SPRING_DEVTOOLS_RESTART_ENABLED: true
    ports:
      - "8085:8085"
    volumes:
      - ./import-bill-service/src:/app/src
    depends_on:
      mysql-db:
        condition: service_healthy
    networks:
      - costume-rental-dev-network

  # Client Costume Rental (Frontend)
  client-costume-rental:
    build:
      context: .
      dockerfile: client-costume-rental/Dockerfile
    container_name: client-costume-rental-dev
    environment:
      SPRING_PROFILES_ACTIVE: docker
      SPRING_DEVTOOLS_RESTART_ENABLED: true
    ports:
      - "8080:8080"
    volumes:
      - ./client-costume-rental/src:/app/src
    depends_on:
      mysql-db:
        condition: service_healthy
    networks:
      - costume-rental-dev-network

volumes:
  mysql_dev_data:

networks:
  costume-rental-dev-network:
    driver: bridge
