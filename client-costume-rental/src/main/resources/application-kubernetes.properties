# Kubernetes-specific configuration for Client Costume Rental
spring.application.name=costume-rental-client
server.port=8080

# Microservices URLs - using environment variables
user.service.url=${USER_SERVICE_URL:http://user-service:8081}
costume.service.url=${COSTUME_SERVICE_URL:http://costume-service:8082}
supplier.service.url=${SUPPLIER_SERVICE_URL:http://supplier-service:8084}

services.user-service.url=${USER_SERVICE_URL:http://user-service:8081}
services.costume-service.url=${COSTUME_SERVICE_URL:http://costume-service:8082}
services.bill-service.url=${BILL_SERVICE_URL:http://bill-costume-service:8083}
services.supplier-service.url=${SUPPLIER_SERVICE_URL:http://supplier-service:8084}
services.import-bill-service.url=${IMPORT_BILL_SERVICE_URL:http://import-bill-service:8085}

# Allow bean definition overriding
spring.main.allow-bean-definition-overriding=true

# Thymeleaf Configuration
spring.thymeleaf.mode=HTML
spring.thymeleaf.cache=false
spring.thymeleaf.enabled=true
spring.thymeleaf.prefix=classpath:/templates/
spring.thymeleaf.suffix=.html

# Actuator endpoints for health checks
management.endpoints.web.exposure.include=health,info,metrics
management.endpoint.health.show-details=always

# Logging configuration
logging.level.root=${LOGGING_LEVEL_ROOT:INFO}
logging.level.org.springframework.web=INFO
logging.level.com.quanghoa=DEBUG

# HTTP client configuration
spring.http.client.timeout.connection=30s
spring.http.client.timeout.read=60s

# Graceful shutdown
server.shutdown=graceful
spring.lifecycle.timeout-per-shutdown-phase=30s
